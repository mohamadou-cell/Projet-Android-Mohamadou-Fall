Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 0d40aaebb65abab242659a8cdf3e2afb7a70f12a)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1620223213710)
@@ -1,6 +1,6 @@
-#Wed Apr 07 19:44:34 GMT 2021
+#Wed May 05 14:00:13 GMT 2021
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
Index: app/src/main/java/Controller/InformationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Controller/InformationActivity.java	(revision 0d40aaebb65abab242659a8cdf3e2afb7a70f12a)
+++ app/src/main/java/Controller/InformationActivity.java	(date 1620233758534)
@@ -1,9 +1,16 @@
 package Controller;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
 
+import android.Manifest;
 import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.location.Address;
+import android.location.Geocoder;
+import android.location.Location;
 import android.location.LocationListener;
 import android.location.LocationManager;
 import android.os.Bundle;
@@ -18,20 +25,27 @@
 import com.example.Test_COVID.Database;
 import com.example.Test_COVID.R;
 import com.google.android.gms.common.api.Status;
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationServices;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
 import com.google.android.libraries.places.api.Places;
 import com.google.android.libraries.places.api.model.Place;
 import com.google.android.libraries.places.widget.Autocomplete;
 import com.google.android.libraries.places.widget.AutocompleteActivity;
 import com.google.android.libraries.places.widget.model.AutocompleteActivityMode;
 
+import java.io.IOException;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Locale;
 
 import javax.net.ssl.SSLEngineResult;
 
 import Model.Personne;
 
-public class InformationActivity extends AppCompatActivity  {
+public class InformationActivity extends AppCompatActivity {
+    private FusedLocationProviderClient fusedLocationProviderClient;
     private EditText nom, prenom, adresse, profil;
     private Button btn2;
     private Personne p1;
@@ -52,18 +66,20 @@
         icone = (ImageView) findViewById(R.id.im2);
         locate = (ImageButton) findViewById(R.id.im9);
 
+        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);
 
-
-        Places.initialize(getApplicationContext(), "AIzaSyD80Is3lmK-wjOgp4ej45qYydjYedq30Rs");
-        locate.setFocusable(false);
+       /* Places.initialize(getApplicationContext(), "AIzaSyD80Is3lmK-wjOgp4ej45qYydjYedq30Rs");
+        locate.setFocusable(false);*/
         locate.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                List<Place.Field> fieldList = Arrays.asList(Place.Field.ADDRESS,
-                        Place.Field.LAT_LNG, Place.Field.NAME);
-                Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.OVERLAY,
-                        fieldList).build(InformationActivity.this);
-                startActivityForResult(intent, 100);
+                if (ActivityCompat.checkSelfPermission(InformationActivity.this,
+                        Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+                    getLocation();
+                } else {
+                    ActivityCompat.requestPermissions(InformationActivity.this,
+                            new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 44);
+                }
             }
         });
 
@@ -87,6 +103,38 @@
         });
     }
 
+    private void getLocation() {
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            // TODO: Consider calling
+            //    ActivityCompat#requestPermissions
+            // here to request the missing permissions, and then overriding
+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+            //                                          int[] grantResults)
+            // to handle the case where the user grants the permission. See the documentation
+            // for ActivityCompat#requestPermissions for more details.
+            return;
+        }
+        fusedLocationProviderClient.getLastLocation().addOnCompleteListener(new OnCompleteListener<Location>() {
+            @Override
+            public void onComplete(@NonNull Task<Location> task) {
+                Location location = task.getResult();
+                if (location != null){
+
+                    try {
+                        Geocoder geocoder = new Geocoder(InformationActivity.this,
+                                Locale.getDefault());
+                        List<Address> addresses = geocoder.getFromLocation(
+                                location.getLatitude(), location.getLongitude(), 1
+                        );
+                        adresse.setText(addresses.get(0).getAddressLine(0));
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+                }
+            }
+        });
+    }
+
     public void enregistrer() {
         Database db = new Database(this);
 
@@ -111,16 +159,5 @@
 
     }
 
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode==100 && resultCode==RESULT_OK){
-            Place place = Autocomplete.getPlaceFromIntent(data);
-            adresse.setText(place.getAddress());
-            adresse.setText(String.format("Locality Name : %s",place.getName()));
-            adresse.setText(String.valueOf(place.getLatLng()));
-
-        }
-    }
+}
 
-}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 0d40aaebb65abab242659a8cdf3e2afb7a70f12a)
+++ app/build.gradle	(date 1620223717703)
@@ -37,4 +37,5 @@
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
+    implementation 'com.google.android.gms:play-services-location:18.0.0'
 }
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1620117390680)
+++ .idea/vcs.xml	(date 1620117390680)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
